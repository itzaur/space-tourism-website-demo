html {
  font-size: 62.5%;
}

body {
  display: grid;
  grid-template-rows: min-content 1fr;
  font-weight: 400;
}

/*=================*/
/* Utility classes */
/*=================*/
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.block {
  display: block;
}

.home {
  background: no-repeat bottom center/cover
    url('../assets/home/background-home-mobile.jpg');

  @media (min-width: 35rem) {
    background: no-repeat center/cover
      url('../assets/home/background-home-tablet.jpg');
  }

  @media (min-width: 48rem) {
    background: no-repeat center/cover
      url('../assets/home/background-home-desktop.jpg');
  }
}

.container {
  max-width: 80rem;

  margin-inline: auto;
  padding-inline: 2em;
}

.header {
  // display: none;
}

.grid-container {
  display: grid;
  place-items: center;
  // text-align: center;
  // border: 5px solid lightgreen;
  padding: 4rem 1rem;

  & * {
    max-width: 50ch;
  }

  & > *:first-child {
    // outline: 1px solid red;
  }

  & > *:last-child {
    // outline: 1px solid blue;
  }

  @media (max-width: 35em) {
    text-align: center;
  }

  @media (min-width: 48em) {
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 60rem)) minmax(
        2rem,
        1fr
      );
    column-gap: var(--container-gap, 5rem);
    align-items: end;
    padding-bottom: Max(6rem, 20vh);
    text-align: left;

    & * {
      max-width: 100%;
    }

    & > *:first-child {
      grid-column: 2;
      // outline: 1px solid red;
    }

    & > *:last-child {
      grid-column: 3;
      // outline: 1px solid blue;
    }
  }
}

.sr-only {
  position: absolute;

  width: 1px;
  height: 1px;

  margin: -1px;
  padding: 0;

  clip: rect(0, 0, 0, 0);

  border: none;

  white-space: nowrap;

  overflow: hidden;
}

.flow > * + * {
  margin-top: var(--flow-space, 1rem);
}

.uppercase {
  text-transform: uppercase;
}

// @function get-rainbow($n: 12, $sat: 90%, $lum: 65%) {
//   $unit: 360 / $n;
//   $s-list: ();

//   @for $i from 0 through $n {
//     $s-list: $s-list, hsl($i * $unit, $sat, $lum);
//   }

//   @return $s-list;
// }
